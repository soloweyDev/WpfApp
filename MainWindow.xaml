<Window x:Class="WpfApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfApp"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="900">

    <Window.Resources>
        <local:MyDoubleConverter x:Key="DoubleConverter"/>
    </Window.Resources>

    <!-- Это информирует элемент управления Window о том, какие
    обработчики вызывать при поступлении команд Open и Save -->
    <Window.CommandBindings>
        <CommandBinding Command="ApplicationCommands.Open" Executed="OpenCmdExecuted" CanExecute="OpenCmdCanExecute"/>
        <CommandBinding Command="ApplicationCommands.Save" Executed="SaveCmdExecuted" CanExecute="SaveCmdCanExecute"/>
    </Window.CommandBindings>

    <!-- Эта панель устанавливает содержимое окна -->
    <DockPanel>
        <Menu DockPanel.Dock = "Top" HorizontalAlignment="Left" Background="White" BorderBrush ="Black">
            <MenuItem Header="_File">
                <MenuItem Command ="ApplicationCommands.Open"/>
                <MenuItem Command ="ApplicationCommands.Save"/>
                <Separator/>
                <MenuItem Header ="_Exit" MouseEnter ="MouseEnterExitArea" MouseLeave ="MouseLeaveArea" Click ="FileExit_Click"/>
            </MenuItem>
            <MenuItem Header="_Edit">
                <MenuItem Command ="ApplicationCommands.Copy"/>
                <MenuItem Command ="ApplicationCommands.Cut"/>
                <MenuItem Command ="ApplicationCommands.Paste"/>
            </MenuItem>
            <MenuItem Header="_Tools">
                <MenuItem Header ="_Spelling Hints" MouseEnter ="MouseEnterToolsHintsArea" MouseLeave ="MouseLeaveArea" Click ="ToolsSpellingHints_Click"/>
            </MenuItem>
        </Menu>
        <ToolBar DockPanel.Dock ="Top" >
            <Button Content ="Exit" MouseEnter ="MouseEnterExitArea" MouseLeave ="MouseLeaveArea" Click ="FileExit_Click"/>
            <Separator/>
            <Button Content ="Check" MouseEnter ="MouseEnterToolsHintsArea" MouseLeave ="MouseLeaveArea" Click ="ToolsSpellingHints_Click" Cursor="Help" />
        </ToolBar>
        <StatusBar DockPanel.Dock ="Bottom" Background="Beige" >
            <StatusBarItem>
                <TextBlock Name="statBarText" Text="Ready"/>
            </StatusBarItem>
        </StatusBar>
        <TabControl Name="MyTabControl" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <TabItem Header="Grid">
                <Grid DockPanel.Dock ="Left" Background ="AliceBlue">
                    <!--Определить строки и колонки -->
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>

                    <GridSplitter Grid.Column = "0" Width = "5" Background ="Gray"/>
                    <StackPanel Grid.Column="0" VerticalAlignment ="Stretch">
                        <Label Name="lblSpellingInstructions" FontSize="14" Margin="10,10,0,0">
                            Spelling Hints
                        </Label>

                        <Expander Name="expanderSpelling" Header = "Try these!" Margin="10,10,10,10">
                            <!-- Будет заполняться программно -->
                            <Label Name ="lblSpellingHints" FontSize ="12"/>
                        </Expander>
                    </StackPanel>

                    <!-- Это будет областью для ввода -->
                    <TextBox Grid.Column ="1" SpellCheck.IsEnabled ="True" AcceptsReturn ="True" Name ="txtData" FontSize ="14" BorderBrush ="Blue" VerticalScrollBarVisibility = "Auto" HorizontalScrollBarVisibility="Auto">
                    </TextBox>
                </Grid>
            </TabItem>
            <TabItem Header="Button1">
                <Button Name="btn1" DockPanel.Dock ="Top" Height="150" Width = "250" Click ="btnClickMe_Clicked">
                    <StackPanel Orientation ="Horizontal">
                        <Label Height="50" FontSize ="20">Fancy Button!</Label>
                        <Canvas Height ="50" Width ="100" >
                            <Ellipse Name = "outerEllipse1" Fill ="Green" Height ="100" MouseDown ="outerEllipse_MouseDown" Width ="100" Cursor="Hand" Canvas.Left="0" Canvas.Top="0"/>
                            <Ellipse Name = "innerEllipse1" Fill ="Yellow" Height = "70" Width ="70" Canvas.Top="15" Canvas.Left="15"/>
                        </Canvas>
                    </StackPanel>
                </Button>
            </TabItem>
            <TabItem Header="Button2">
                <Button Name="btn2" DockPanel.Dock ="Top" Height="150" Width = "250" Click ="btn2_Clicked">
                    <StackPanel Orientation ="Horizontal">
                        <Label Height="50" FontSize ="20">Fancy Button!</Label>
                        <Canvas Height ="50" Width ="100" >
                            <Ellipse Name = "outerEllipse2" Fill ="Green" Height ="25" MouseDown ="outerEllipse2_MouseDown" PreviewMouseDown ="outerEllipse2_PreviewMouseDown" Width ="50" Cursor="Hand" Canvas.Left="25" Canvas.Top="12"/>
                            <Ellipse Name = "innerEllipse2" Fill ="Yellow" Height = "15" Width ="36" Canvas.Top="17" Canvas.Left="32"/>
                        </Canvas>
                    </StackPanel>
                </Button>
            </TabItem>
            <TabItem Header="Ink API">
                <StackPanel Background="#FFE5E5E5">
                    <ToolBar Name="InkToolBar" Height="60">
                        <Border Margin="0,2,0,2.4" Width="280" VerticalAlignment="Center">
                            <WrapPanel>
                                <RadioButton x:Name="inkRadio" Margin="5,10" Content="Ink Mode!" IsChecked="True" Click="RadioButtonClicked"/>
                                <RadioButton x:Name="eraseRadio" Margin="5,10" Content="Erase Mode!"  Click="RadioButtonClicked"/>
                                <RadioButton x:Name="selectRadio" Margin="5,10" Content="Select Mode!"  Click="RadioButtonClicked"/>
                            </WrapPanel>
                        </Border>
                        <Separator/>
                        <ComboBox x:Name="comboColors" Width="75" Margin="10,0,0,0" SelectionChanged="ColorChanged">
                            <ComboBoxItem Content="Red"/>
                            <ComboBoxItem Content="Green"/>
                            <ComboBoxItem Content="Blue"/>
                        </ComboBox>
                        <Separator/>
                        <ComboBox x:Name="comboColors2" Width="130" SelectionChanged="ColorChanged2">
                            <StackPanel Orientation = "Horizontal" Tag="Red">
                                <Ellipse Fill ="Red" Height ="50" Width ="50"/>
                                <Label FontSize ="20" HorizontalAlignment="Center" VerticalAlignment="Center" Content="Red"/>
                            </StackPanel>
                            <StackPanel Orientation = "Horizontal" Tag="Green">
                                <Ellipse Fill ="Green" Height ="50" Width ="50"/>
                                <Label FontSize ="20" HorizontalAlignment="Center" VerticalAlignment="Center" Content="Green"/>
                            </StackPanel>
                            <StackPanel Orientation ="Horizontal" Tag="Blue">
                                <Ellipse Fill ="Blue" Height ="50" Width ="50"/>
                                <Label FontSize ="20" HorizontalAlignment="Center" VerticalAlignment="Center" Content="Blue"/>
                            </StackPanel>
                        </ComboBox>
                        <Separator/>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <Button Grid.Column="0" x:Name="btnSave" Margin="10,10" Width="70" Content="Save Data" Click="SaveData"/>
                            <Button Grid.Column="1" x:Name="btnLoad" Margin="10,10" Width="70" Content="Load Data" Click="LoadData"/>
                            <Button Grid.Column="2" x:Name="btnClear" Margin="10,10" Width="70" Content="Clear" Click="Clear"/>
                        </Grid>
                    </ToolBar>
                    <InkCanvas x:Name="MyInkCanvas" Background="#FFB6F4F1" />
                </StackPanel>
            </TabItem>
            <TabItem x:Name="tabDataBinding" Header="Data Binding">
                <StackPanel Width="250">
                    <Label Content="Move the scroll bar to see the current value"/>
                    <!--Значение линейки прокрутки является источником этой привязки данных-->
                    <ScrollBar x:Name="mySB" Orientation="Horizontal" Height="30" Minimum = "1" Maximum = "100" LargeChange = "1" SmallChange = "1"/>
                    <!--Содержимое метки будет привязано к линейке прокрутки-->
                    <Label Height="30" BorderBrush="Blue" BorderThickness="2" Content = "{Binding Value, ElementName=mySB}" ContentStringFormat="The value is: {0:F0}"/>
                    <!--Разбиение объекта и значения посредством DataContext-->
                    <Label Height="30" BorderBrush="Blue" BorderThickness="2" DataContext = "{Binding ElementName=mySB}" Content = "{Binding Path=Value}"/>
                </StackPanel>
            </TabItem>
            <TabItem Header="DataContext">
                <!--Обратите внимание, что StackPanel устанавливает свойство DataContext-->
                <StackPanel Background="#FFE5E5E5" DataContext = "{Binding ElementName=mySB1}">
                    <Label Content="Move the scroll bar to see the current value"/>
                    <ScrollBar Orientation="Horizontal" Height="30" Name="mySB1" Maximum = "100" LargeChange="1" SmallChange="1"/>
                    <!--Теперь оба элемента пользовательского интерфейса работают
                    со значением линейки прокрутки уникальными путями-->
                    <Label Height="30" BorderBrush="Blue" BorderThickness="2" Content = "{Binding Path=Value}" ContentStringFormat="{}{0:F0}"/>
                    <TextBox Height="30" BorderBrush="Blue" BorderThickness="2" Text = "{Binding Path=Value, Converter={StaticResource DoubleConverter}, Mode=TwoWay}" />
                    <Label x:Name="labelSBThumb" Height="30" BorderBrush="Blue" BorderThickness="2" />
                    <Button Content="Click" Height="200" FontSize = "{Binding Path=Value}"/>
                </StackPanel>
            </TabItem>
        </TabControl>
    </DockPanel>
</Window>
